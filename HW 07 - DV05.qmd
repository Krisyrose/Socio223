---
title: "HW 06 - DV05"
author: "Kristy"
format: html
editor: visual
embed-resources: true
---

## Set up

```{r}
library(tidyverse)
# Read in the data 
wncaa <- read_csv("https://raw.githubusercontent.com/vaiseys/dav-course/main/Data/wncaa.csv")

# Glimpse the data 
glimpse(wncaa)
```

## Question 1

First, `filter` the dataset for observations where `tourney_finish` equals `Champ`.

```{r}
filter_wncaa <- wncaa %>% filter(tourney_finish == "Champ")
```

Now, use `group_by` and `summarize` to calculate the percentage of tournaments each team has.

```{r}
percent_wncaa <-   #need to save to new file to call later 
  filter_wncaa |> 
  group_by(school) |>
  summarize(N = n()) |>
  mutate(percentage = (N/sum(N))*100) |>
  arrange(desc(N))

```

Plot a bar plot that shows these percentages by school.

```{r}
ggplot(percent_wncaa,
       aes(x = percentage,
           y = reorder(school, percentage, na.rm=TRUE))) +
  geom_col(alpha = 0.2)+
  theme_minimal()+
  labs(x = "Percent", y = "School", title = "Percent Tournament Champ")

```

**What patterns do you see? Who are the two teams that have won the most?**

Uconn and Tennessee have won the most. There tends to be a pattern of teams having the same win percentage ex(Stanford, California, Nortre Dame, Louisiana)

## Question 2

Let's begin by creating a dataset that includes just the "top teams".

```{r}
champ_names <- unique(filter_wncaa$school)
```

Now, we filter our original name so that only these schools are included.

```{r}
winners <- wncaa %>% 
  filter(school %in% champ_names)
```

Now, make a plot that shows boxplots for the distribution of `seeds` for each school. Make sure you use `coord_flip()` so that the school names are legible.

```{r}
ggplot(winners,
       aes(x = seed,
           y = reorder(school, seed, na.rm=TRUE))) +
  geom_boxplot()+
  theme_minimal()+
  labs(x = "Seed", y = "School", title = "Seed Tournament Champ")

```

These days, it's good practice to add all the data points in addition to the boxplot. You can use `geom_jitter()` to do this. Don't forget to use `outlier.shape = NA` in the boxplot so you don't plot the outliers twice.

```{r}
ggplot(winners,
       aes(x = seed,
           y = reorder(school, seed, na.rm=TRUE))) +
  geom_boxplot(outlier.shape = NA)+
  geom_jitter(alpha = 0.3)+
  theme_minimal()+
  labs(x = "Seed", y = "School", title = "Seed Tournament Champ")
```

We will also want to organize the plots so that they convey information more clearly. Use the `reorder()` trick to show the distributions in a an order that is easier to understand. You will need to calculate some school-specific statistics to use for the reordering. (You might find `group_by()` and `mutate()` valuable here, although there are several ways to do this.)

**Describe the results? Any surprises?**

Tennessee and Uconn are in the lowest seed. The teams with the highest percentage wins are in the higher seeds.

Try to make the same plot using `geom_violin()` instead of `geom_boxplot()`. Which visualization do you think is more informative? There's no right answer here but provide some reasoning to justify your choice.

```{r}
ggplot(winners,
       aes(x = seed,
           y = reorder(school, seed, na.rm=TRUE))) +
  geom_violin(outlier.shape = NA)+
  geom_jitter(alpha = 0.3)+
  theme_minimal()+
  labs(x = "Seed", y = "School", title = "Seed Tournament Champ")
```

`geom_boxplot` provides more exact values whereas `geom_violin` is better at showing the distribution of data within each category (skewness, shape of distribution). I prefer the `geom_boxplot`.

## Question 3

Try making the plot above but using `geom_point` only. Why does it not work very well?

```{r}
ggplot(winners,
       aes(x = seed,
           y = reorder(school, seed, na.rm=TRUE))) +
  geom_point(outlier.shape = NA)+
  geom_jitter(alpha = 0.3)+
  theme_minimal()+
  labs(x = "Seed", y = "School", title = "Seed Tournament Champ")
```

`Geom_point` is worse because there is a lot of over plotting making it more difficult to see the distribution of data and compare it to other data. It also has a lack of summary data like you would expect to see in `geom_boxplot`.

## Question 4

Okay, now let's try the `summarize_if()` verb. Let's make a new data frame by taking the `winners` dataset, grouping by school, and take the `mean()` and `sd()` of the columns **if** they are numeric. HINT: you can also use the newer `across()` syntax for this if you prefer. It looks like this:

```{r}
winners_mean_sd <- winners |> 
  group_by(school) |> 
  summarize(across(where(is.numeric),
                   list(mean = mean,
                        sd = sd)))
```

Let's explore the average win percentage of these schools across the seasons. In your new dataset, this column should be called `reg_percent_mean`. Make a dot plot, where this column is in the y-axis and school is the x-axis. Again, use our tricks, `coord_flip` and `reorder` to make the plot legible. (Or you can specify the proper axes from the start if you like. Sometimes this is easier, but not always!)

```{r}
ggplot(winners_mean_sd, 
       aes(x = reorder(school, reg_percent_mean), y = reg_percent_mean)) +
  geom_point() +
  coord_flip() +
  labs(x = "School", y = "Average Win Percentage", title = "Average Win Percentage Across Seasons")
```

**Describe the results. Which tournament winner had the lowest regular season win percentage?**

Tezas A&M with an average win percentage of 73.98%.

Now, let's try to take into account the standard deviation. Use the `geom_pointrange` to show the intervals of one standard deviation below and above the mean (just like Figure 5.15 in the online version of socviz.co).

```{r}
ggplot(winners_mean_sd, 
       aes(x = reorder(school, reg_percent_mean), y = reg_percent_mean)) +
  geom_pointrange(aes(ymin = reg_percent_mean - reg_percent_sd,
                      ymax = reg_percent_mean + reg_percent_sd))+
  coord_flip() +
  labs(x = "School", y = "Average Win Percentage", title = "Average Win Percentage Across Seasons")
```

**What is the school with the narrowest interval? What does this mean?**

Texas A&M has the narrowest interval, meaning they have the most consistency with their average win percentage.

Can you make the same plot using `geom_linerange` ? Do you think this is a good or bad idea? Why? There is no right answer; just give your reasoning.

```{r}
ggplot(winners_mean_sd, 
       aes(x = reorder(school, reg_percent_mean), y = reg_percent_mean)) +
  geom_linerange(aes(ymin = reg_percent_mean - reg_percent_sd,
                      ymax = reg_percent_mean + reg_percent_sd))+
  coord_flip() +
  labs(x = "School", y = "Average Win Percentage", title = "Average Win Percentage Across Seasons")
```

I don't like `geom_linerange` as much because it doesn't show what the mean percentage is anymore. There are less summary statistics.
