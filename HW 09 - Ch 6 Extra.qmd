---
title: "HW 09 - Ch 6 Extra"
author: "Kristy Feinberg"
format: html
editor: visual
embed-resources: true
---

## Set Up

```{r}
library(tidyverse)
library(moderndive)
library(broom)
theme_set(theme_minimal())
```

```{r}
data(bikes, package = "bayesrules")
glimpse(bikes)
```

## Question 0

**Before analyzing a dataset, it's good to know some stuff about it. Answer the following questions:**

-   **how many rows are in the dataset?**

    -   500

-   **what does each row represent?**

    -   each row represents a separate data entry (on a different date) indicating specific variable such as season, temperature windspeed, and rides

-   **what dates does the dataset cover?**

    -   January 1st 2011 to December 31st 2012

-   **what is the highest observed ridership in the dataset?**

    -   6946 rides on 9/26/2012

-   **what was the highest wind speed recorded in the dataset?**

    -   34.00002 on 2/19/2011

## Question 1

**What is the correlation between number of rides and what the temperature feels like (in Fahrenheit)? What is the correlation between the number of rides and wind speed (miles per hour)?**

```{r}
bikes %>% 
  select(rides,temp_feel) %>% 
  cor(use = "complete.obs")
```

Correlation between number of rides and temperature is 0.5825

```{r}
bikes %>% 
  select(rides,windspeed) %>% 
  cor(use = "complete.obs")
```

Correlation between number of rides and windspeed is -0.1949

## Question 2

**Using the approximation that a mile is equal to 1.61 kilometers, convert `windspeed` to kilometers per hour. Call the new variable `wind_kph` and add it to the `bikes` data frame. What is the correlation between wind speed in MPH and wind speed in KPH? Explain why in enough detail that I know you understand.**

```{r}
bikes <- bikes %>%
  mutate(wind_kph=windspeed*1.61)
```

```{r}
bikes %>% 
  select(windspeed,wind_kph) %>% 
  cor(use = "complete.obs")
```

The correlation between wind speed in MPH and wind speed in KPH is 1. This is to be predicted because all we did was multiple MPH by 1.61 to find KPH. MPH can always accurately explain variation in KPH.

## Question 3

**Estimate two simple regressions:**

-   **predict rides as a function of wind speed in MPH**

-   **predict rides as a function of wind speed in KPH**

**Use `get_regression_table()` or `broom::tidy()` to display the results. This will give you two sets of an intercept and a slope. If any coefficients are the same between models, explain why. If any coefficients are different between models, explain why. Make sure to give me enough detail to convince me you understand.**

```{r}
rides_MPH_fit <- lm(rides ~ windspeed, data = bikes)

broom::tidy(rides_MPH_fit)
```

```{r}
rides_KPH_fit <- lm(rides ~ wind_kph, data = bikes)

broom::tidy(rides_KPH_fit)
```

The intercept for both regressions is 4205.065. This makes sense because a wind speed of zero in MPH should have the same result as a wind speed of zero in KPH. The slope for MPH wind speed is -55.5226 and the slope for KPH wind speed is -34.346. This is consistent with what we would expect. -34.346\*1.61 = -55.297 account for rounding errors that is equivalent to the slope we found for MPH wind speed.

A regression for rides given MPH wind speed = 1 should result in the same value as a regression for rides given KPH wind speed is 1.61.

4205.06-34.48(KPH) = 4205.06-55.52(MPH)

4149.54 = 4149.48 --\> accounting for rounding errors these are equivalent

## Question 4

Using the models from above, tell me what the predicted ridership would be if the wind is blowing at 20 KPH. What would the predicted ridership be if the wind is blowing at 20 MPH?

```{r}
pred_df <- tribble(         # tribble allows easy manual data entry
  ~wind_kph,
  20
)

pred_df <- pred_df |>
  mutate(expected_rides = predict(rides_KPH_fit, newdata = pred_df))

pred_df
```

rides_KPH = 4205.06-34.48(KPH) = 3515.46

rides_MPH = 4205.06-55.52(MPH) = 3094.66

```{r}
pred_df <- tribble(         # tribble allows easy manual data entry
  ~windspeed,
  20
)

pred_df <- pred_df |>
  mutate(expected_rides = predict(rides_MPH_fit, newdata = pred_df))

pred_df
```

## Question 5

**Let's get more realistic and move to multiple regression. We're going to use `temp_feel` in addition to wind speed. But we don't want to use Fahrenheit. So make a new variable called `temp_c` that is a conversion of `temp_feel` to Celsius and add it to the `bikes` dataframe. (You may have to look up how to do this conversion.)**

```{r}
bikes <- bikes %>%
  mutate(temp_c=((temp_feel-32)*(5/9)))
```

**With this new variable, estimate a multiple regression that predicts rides as an additive function of `wind_kph` and `temp_c` (that is, no interaction). Interpret both of the slope coefficients using the following language:**

**"For a \_\_\_\_\_ increase in \_\_\_\_\_, the model expects a \_\_\_\_\_ increase in \_\_\_\_\_."**

**Now interpret the intercept.**

```{r}
rides_2var_fit <- lm(rides ~ wind_kph+temp_c, data = bikes)

broom::tidy(rides_2var_fit)
```

For a 1 KPH increase in wind speed, the model expects a 19.84 decrease in rides (or a -19.84 increase in rides).

For a 1 degree increase in temperature, the model expects a 143.23 increase in rides.

## Question 6

Using the multiple regression you just estimated, give me ridership predictions for the following situations:

-   SITUATION 1: temp = 25C, wind = 15 KPH

-   SITUATION 2: temp = 15C, wind = 5 KPH

-   SITUATION 3: temp = 10C, wind = 40 KPH

You can do this manually (using R as a calculator) or you might find the following code useful. I'm not going to give you *all* the code, but this is a head start!

```{r}
pred_df <- tibble(
  situation = 1:3,
  temp_c = c(25, 15, 10),
  wind_kph = c(15, 5, 40)
)

pred_df <- pred_df |>
  mutate(expected_rides = predict(rides_2var_fit, newdata = pred_df))

pred_df
```

## Question 7

Let's add another predictor into the mix. Estimate a new model that uses `weekend` in addition to the predictors already in the model. Display the model results. Interpret the coefficient on `weekend` using a complete sentence.

```{r}
bikes <- bikes |>
  mutate(weekend = as.factor(weekend))
```

```{r}
model2 <- lm(rides ~ temp_c + wind_kph + weekend, data = bikes)

get_regression_table(model2) |> select(term,estimate)
```

`weekend` is a logical variable. The coefficient means if it is `true` meaning it's the weekend there will be 713.57 less rides. People ride fewer bikes on the weekend.

rides = 1214.803+140.339(temperature celsus) -20.386 (wind KPH) - 713.575(weekend)

## Question 8

**If the temperature and the wind speed are average, what is the expected ridership for a weekend day? What is the expected ridership for a weekday? Show the code that gets you your answers**

```{r}
pred_df <- tibble(
  situation = 1:2,
  temp_c = c(mean(bikes$temp_c), mean(bikes$temp_c)),
  wind_kph = c(mean(bikes$wind_kph), mean(bikes$wind_kph)), 
  weekend = c("TRUE","FALSE")
)

pred_df <- pred_df |>
  mutate(expected_rides = predict(model2, newdata = pred_df))

pred_df
```

## Question 9

You can use `get_regression_points()` or `predict()` to see how the model did at predicting each individual value of `rides`. Use one of these functions to find the date with the *largest absolute residual*. That is, find the day where the model is most wrong about predicted ridership. Why is the model so wrong about this day? (There is a correct answer here.

```{r}
result <- get_regression_points(model2) %>%
  arrange(desc(abs(residual)))

result
```

The largest residual was -3490.348
