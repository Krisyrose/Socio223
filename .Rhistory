bikes %>%
select(rides,temp_feel) %>%
cor(use = "complete.obs")
bikes %>%
select(rides,windspeed) %>%
cor(use = "complete.obs")
bikes <- bikes %>%
mutate(wind_kph=windspeed*1.61)
bikes %>%
select(windspeed,wind_kph) %>%
cor(use = "complete.obs")
rides_MPH_fit <- lm(rides ~ windspeed, data = bikes)
broom::tidy(rides_MPH_fit)
rides_KPH_fit <- lm(rides ~ wind_kph, data = bikes)
broom::tidy(rides_KPH_fit)
pred_df <- tribble(         # tribble allows easy manual data entry
~wind_kph,
20
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_KPH_fit, newdata = pred_df))
pred_df
pred_df <- tribble(         # tribble allows easy manual data entry
~windspeed,
20
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_MPH_fit, newdata = pred_df))
pred_df
bikes <- bikes %>%
mutate(temp_c=((temp_feel-32)*(5/9)))
rides_2var_fit <- lm(rides ~ wind_kph+temp_c, data = bikes)
broom::tidy(rides_2var_fit)
pred_df <- tibble(
situation = 1:3,
temp_c = c(25, 15, 10),
wind_kph = c(15, 5, 40)
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_2var_fit, newdata = pred_df))
pred_df
bikes <- bikes |>
mutate(weekend = as.factor(weekend))
bikes_relevel <- bikes |>
mutate(weekend = as.factor(weekend))
model2 <- lm(rides ~ temp_c + weekend, data = bikes_relevel)
get_regression_table(model2)
library(tidyverse)
library(moderndive)
library(broom)
theme_set(theme_minimal())
data(bikes, package = "bayesrules")
glimpse(bikes)
bikes %>%
select(rides,temp_feel) %>%
cor(use = "complete.obs")
bikes %>%
select(rides,windspeed) %>%
cor(use = "complete.obs")
bikes <- bikes %>%
mutate(wind_kph=windspeed*1.61)
bikes %>%
select(windspeed,wind_kph) %>%
cor(use = "complete.obs")
rides_MPH_fit <- lm(rides ~ windspeed, data = bikes)
broom::tidy(rides_MPH_fit)
rides_KPH_fit <- lm(rides ~ wind_kph, data = bikes)
broom::tidy(rides_KPH_fit)
pred_df <- tribble(         # tribble allows easy manual data entry
~wind_kph,
20
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_KPH_fit, newdata = pred_df))
pred_df
pred_df <- tribble(         # tribble allows easy manual data entry
~windspeed,
20
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_MPH_fit, newdata = pred_df))
pred_df
bikes <- bikes %>%
mutate(temp_c=((temp_feel-32)*(5/9)))
rides_2var_fit <- lm(rides ~ wind_kph+temp_c, data = bikes)
broom::tidy(rides_2var_fit)
pred_df <- tibble(
situation = 1:3,
temp_c = c(25, 15, 10),
wind_kph = c(15, 5, 40)
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_2var_fit, newdata = pred_df))
pred_df
model2 <- lm(rides ~ temp_c + weekend, data = bikes_relevel)
get_regression_table(model2)
model2 <- lm(rides ~ temp_c + weekend, data = bikes)
get_regression_table(model2)
glimpse(bikes)
model2 <- lm(rides ~ temp_c + weekend, data = bikes)
get_regression_table(model2)
model2 <- lm(rides ~ temp_c + weekend, data = bikes)
get_regression_table(model2) |> select(term,estimate)
model2 <- lm(rides ~ temp_c* weekend, data = bikes)
get_regression_table(model2) |> select(term,estimate)
model2 <- lm(rides ~ temp_c + weekend, data = bikes)
get_regression_table(model2) |> select(term,estimate)
bikes <- bikes %>%
mutate(temp_c=((temp_feel-32)*(5/9)))
model2 <- lm(rides ~ temp_c*weekend, data = bikes)
get_regression_table(model2) |> select(term,estimate)
pred_df <- tibble(
situation = 1:2,
temp_c = c(25, 10),
weekend = c(TRUE, FALSE)
)
pred_df <- pred_df |>
mutate(expected_rides = predict(model2, newdata = pred_df))
pred_df
model3 <- lm(rides ~ temp_c*weekend, data = bikes)
get_regression_table(model2) |> select(term,estimate)
pred_df <- tibble(
situation = 1:2,
temp_c = c(25, 10),
weekend = c(TRUE, FALSE)
)
pred_df <- pred_df |>
mutate(expected_rides = predict(model2, newdata = pred_df))
pred_df
pred_df <- tibble(
situation = 1:2,
temp_c = c(25, 10),
weekend = c(TRUE, FALSE)
)
pred_df <- pred_df |>
mutate(expected_rides = predict(model3, newdata = pred_df))
pred_df
model2 <- lm(rides ~ temp_c + wind_kph + weekend, data = bikes)
get_regression_table(model2) |> select(term,estimate)
model3 <- lm(rides ~ temp_c*weekend*wind_kph, data = bikes)
get_regression_table(model2) |> select(term,estimate)
model3 <- lm(rides ~ temp_c*weekend*wind_kph, data = bikes)
get_regression_table(model2) |> select(term,estimate)
library(tidyverse)
library(moderndive)
library(broom)
theme_set(theme_minimal())
data(bikes, package = "bayesrules")
glimpse(bikes)
bikes %>%
select(rides,temp_feel) %>%
cor(use = "complete.obs")
bikes %>%
select(rides,windspeed) %>%
cor(use = "complete.obs")
bikes <- bikes %>%
mutate(wind_kph=windspeed*1.61)
bikes %>%
select(windspeed,wind_kph) %>%
cor(use = "complete.obs")
rides_MPH_fit <- lm(rides ~ windspeed, data = bikes)
broom::tidy(rides_MPH_fit)
rides_KPH_fit <- lm(rides ~ wind_kph, data = bikes)
broom::tidy(rides_KPH_fit)
pred_df <- tribble(         # tribble allows easy manual data entry
~wind_kph,
20
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_KPH_fit, newdata = pred_df))
pred_df
pred_df <- tribble(         # tribble allows easy manual data entry
~windspeed,
20
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_MPH_fit, newdata = pred_df))
pred_df
bikes <- bikes %>%
mutate(temp_c=((temp_feel-32)*(5/9)))
rides_2var_fit <- lm(rides ~ wind_kph+temp_c, data = bikes)
broom::tidy(rides_2var_fit)
pred_df <- tibble(
situation = 1:3,
temp_c = c(25, 15, 10),
wind_kph = c(15, 5, 40)
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_2var_fit, newdata = pred_df))
pred_df
bikes <- bikes |>
mutate(weekend = as.factor(weekend))
model2 <- lm(rides ~ temp_c + wind_kph + weekend, data = bikes)
get_regression_table(model2) |> select(term,estimate)
bikes %>%
select(temp_feel,windspeed) %>%
cor(use = "complete.obs")
pred_df <- tibble(
situation = 1:2,
temp_c = c(25, 10),
weekend = c(TRUE, FALSE)
)
pred_df <- pred_df |>
mutate(expected_rides = predict(model2, newdata = pred_df))
pred_df <- tibble(
situation = 1:2,
temp_c = c(25, 10),
wind_kph = C(30, 40),
weekend = c(TRUE, FALSE)
)
pred_df <- tibble(
situation = 1:2,
temp_c = c(25, 10),
wind_kph = c(30, 40),
weekend = c(TRUE, FALSE)
)
pred_df <- pred_df |>
mutate(expected_rides = predict(model2, newdata = pred_df))
pred_df <- tibble(
situation = 1:2,
temp_c = c(25, 10),
wind_kph = c(30, 40),
weekend = c(0,1)
)
pred_df <- pred_df |>
mutate(expected_rides = predict(model2, newdata = pred_df))
ggp(model2,terms=c(temp_c,wind_kph)
ggp(model2,terms=c(temp_c,
wind_kph))
ggp(model2,terms=c("temp_c",
"wind_kph"))
ggp(model2,terms=c("temp_c",
"wind_kph"))
ggpredict(model2,terms=c("temp_c",
"wind_kph"))
pred_df <- tibble(
situation = 1:2,
temp_c = c(25, 10),
wind_kph = c(30, 40),
weekend = c("TRUE","FALSE")
)
pred_df <- pred_df |>
mutate(expected_rides = predict(model2, newdata = pred_df))
pred_df
model2 <- lm(rides ~ temp_c + wind_kph + weekend, data = bikes)
get_regression_table(model2)
model2 <- lm(rides ~ temp_c + wind_kph + weekend, data = bikes)
get_regression_table(model2) |> select(term,estimate)
pred_df <- tibble(
situation = 1:2,
temp_c = c(mean(temp_c), mean(temp_c)),
wind_kph = c(mean(wind_kph), mean(wind_kph)),
weekend = c("TRUE","FALSE")
)
pred_df <- tibble(
situation = 1:2,
temp_c = c(mean("temp_c"), mean("temp_c")),
wind_kph = c(mean(wind_kph), mean(wind_kph)),
weekend = c("TRUE","FALSE")
)
pred_df <- tibble(
situation = 1:2,
temp_c = c(mean("temp_c"), mean("temp_c")),
wind_kph = c(mean("wind_kph"), mean("wind_kph")),
weekend = c("TRUE","FALSE")
)
pred_df <- pred_df |>
mutate(expected_rides = predict(model2, newdata = pred_df))
pred_df
pred_df <- tibble(
situation = 1:2,
temp_c = c(mean("temp_c"), mean("temp_c")),
wind_kph = c(mean("wind_kph"), mean("wind_kph")),
weekend = c("TRUE","FALSE")
)
pred_df <- pred_df |>
mutate(expected_rides = predict(model2, newdata = pred_df))
pred_df
pred_df <- tibble(
situation = 1:2,
temp_c = c(mean(bikes$temp_c), mean(bikes$temp_c)),
wind_kph = c(mean(bikes$wind_kph"), mean(bikes$wind_kph)),
weekend = c("TRUE","FALSE")
pred_df <- tibble(
situation = 1:2,
temp_c = c(mean(bikes$temp_c), mean(bikes$temp_c)),
wind_kph = c(mean(bikes$wind_kph"), mean(bikes$wind_kph)),
weekend = c("TRUE","FALSE")
pred_df <- tibble(
situation = 1:2,
temp_c = c(mean(bikes$temp_c), mean(bikes$temp_c)),
wind_kph = c(mean(bikes$wind_kph), mean(bikes$wind_kph)),
weekend = c("TRUE","FALSE")
)
pred_df <- pred_df |>
mutate(expected_rides = predict(model2, newdata = pred_df))
pred_df
get_regression_points(bikes)
get_regression_points(model2)
get_regression_points(model2)
order(ascending)
get_regression_points(model2)
get_regression_points(model2) %>% select(rides,residual)
get_regression_points(model2) %>% select(rides,order(residual))
get_regression_points(model2) %>% select(rides,residual)
result <- get_regression_points(model2) %>%
select(rides, residual) %>%
arrange(desc(abs(residual)))
result <- get_regression_points(model2) %>%
select(rides, residual) %>%
arrange(desc(abs(residual)))
result
result <- get_regression_points(model2) %>%
arrange(desc(abs(residual)))
result
result <- get_regression_points(model2) %>%
select(date, rides, residual)
result <- get_regression_points(model2) %>%
select(date, rides, residual) %>%
arrange(desc(abs(residual)))
result <- get_regression_points(model2) %>%
select(rides, date, residual) %>%
arrange(desc(abs(residual)))
result <- get_regression_points(model2) %>%
arrange(desc(abs(residual)))
result
View(result)
View(result)
View(results)
View(result)
View(bikes)
bikerides <- predict(weekends)
bikerides <- predict(weekend)
bikerides <- predict(weekend)
result <- get_regression_points(bikes) %>%
arrange(desc(abs(residual)))
result <- get_regression_points(model2) %>%
arrange(desc(abs(residual)))
result
predict(bikes,weekend)
predict(bikes$weekend)
residuals <- bikes$rides - bikerides
library(tidyverse)
library(moderndive)
library(broom)
theme_set(theme_minimal())
data(bikes, package = "bayesrules")
glimpse(bikes)
bikes %>%
select(rides,temp_feel) %>%
cor(use = "complete.obs")
bikes %>%
select(rides,windspeed) %>%
cor(use = "complete.obs")
bikes <- bikes %>%
mutate(wind_kph=windspeed*1.61)
bikes %>%
select(windspeed,wind_kph) %>%
cor(use = "complete.obs")
rides_MPH_fit <- lm(rides ~ windspeed, data = bikes)
broom::tidy(rides_MPH_fit)
rides_KPH_fit <- lm(rides ~ wind_kph, data = bikes)
broom::tidy(rides_KPH_fit)
pred_df <- tribble(         # tribble allows easy manual data entry
~wind_kph,
20
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_KPH_fit, newdata = pred_df))
pred_df
pred_df <- tribble(         # tribble allows easy manual data entry
~windspeed,
20
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_MPH_fit, newdata = pred_df))
pred_df
bikes <- bikes %>%
mutate(temp_c=((temp_feel-32)*(5/9)))
rides_2var_fit <- lm(rides ~ wind_kph+temp_c, data = bikes)
broom::tidy(rides_2var_fit)
pred_df <- tibble(
situation = 1:3,
temp_c = c(25, 15, 10),
wind_kph = c(15, 5, 40)
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_2var_fit, newdata = pred_df))
pred_df
bikes <- bikes |>
mutate(weekend = as.factor(weekend))
model2 <- lm(rides ~ temp_c + wind_kph + weekend, data = bikes)
get_regression_table(model2) |> select(term,estimate)
pred_df <- tibble(
situation = 1:2,
temp_c = c(mean(bikes$temp_c), mean(bikes$temp_c)),
wind_kph = c(mean(bikes$wind_kph), mean(bikes$wind_kph)),
weekend = c("TRUE","FALSE")
)
pred_df <- pred_df |>
mutate(expected_rides = predict(model2, newdata = pred_df))
pred_df
bikerides <- predict(weekend)
bikerides <- predict(bikes, weekend)
result <- get_regression_points(model2)
library(tidyverse)
library(moderndive)
library(broom)
theme_set(theme_minimal())
data(bikes, package = "bayesrules")
glimpse(bikes)
bikes %>%
select(rides,temp_feel) %>%
cor(use = "complete.obs")
bikes %>%
select(rides,windspeed) %>%
cor(use = "complete.obs")
bikes <- bikes %>%
mutate(wind_kph=windspeed*1.61)
bikes %>%
select(windspeed,wind_kph) %>%
cor(use = "complete.obs")
rides_MPH_fit <- lm(rides ~ windspeed, data = bikes)
broom::tidy(rides_MPH_fit)
rides_KPH_fit <- lm(rides ~ wind_kph, data = bikes)
broom::tidy(rides_KPH_fit)
pred_df <- tribble(         # tribble allows easy manual data entry
~wind_kph,
20
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_KPH_fit, newdata = pred_df))
pred_df
pred_df <- tribble(         # tribble allows easy manual data entry
~windspeed,
20
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_MPH_fit, newdata = pred_df))
pred_df
bikes <- bikes %>%
mutate(temp_c=((temp_feel-32)*(5/9)))
rides_2var_fit <- lm(rides ~ wind_kph+temp_c, data = bikes)
broom::tidy(rides_2var_fit)
pred_df <- tibble(
situation = 1:3,
temp_c = c(25, 15, 10),
wind_kph = c(15, 5, 40)
)
pred_df <- pred_df |>
mutate(expected_rides = predict(rides_2var_fit, newdata = pred_df))
pred_df
bikes <- bikes |>
mutate(weekend = as.factor(weekend))
model2 <- lm(rides ~ temp_c + wind_kph + weekend, data = bikes)
get_regression_table(model2) |> select(term,estimate)
pred_df <- tibble(
situation = 1:2,
temp_c = c(mean(bikes$temp_c), mean(bikes$temp_c)),
wind_kph = c(mean(bikes$wind_kph), mean(bikes$wind_kph)),
weekend = c("TRUE","FALSE")
)
pred_df <- pred_df |>
mutate(expected_rides = predict(model2, newdata = pred_df))
pred_df
result <- get_regression_points(model2)
result%>%
arrange(desc(abs(residual)))
result
result <- get_regression_points(model2)
result%>%
arrange(desc(abs(residual)))
library(tidyverse)
library(here)
library(moderndive)
theme_set(theme_minimal())
nobel_winners <- read_csv(here("Data", "nobel_winners.csv"))
nobel_winners_flt <- nobel_winners %>%
filter(category != "Peace") %>%
mutate(is_us = if_else(birth_country == "United States of America", 1, 0))
true_prop <- nobel_winners_flt %>%
group_by(is_us) %>%
summarise(prop = n()/nrow(nobel_winners_flt))
ggplot() +
coord_cartesian(xlim = c(0,1), ylim = c(0,1)) +
geom_vline(xintercept = true_prop[2,2][[1]], linetype = "dashed")  +
labs(x = "Proportion")
set.seed(33)
# Random sample
our_sample <- sample_n(nobel_winners_flt,
size = 25,
replace = F)
sample_prop <- our_sample %>%
group_by(is_us) %>%
summarise(prop = n()/nrow(our_sample))
# How does our proportion look like?
ggplot() +
coord_cartesian(xlim = c(0,1), ylim = c(0,1)) +
geom_vline(xintercept = true_prop[2,2][[1]], linetype = "dashed")  +
geom_vline(xintercept = sample_prop[2,2][[1]], linetype = "dotted", col = "red") +
labs(x = "Proportion")
View(nobel_winners)
View(nobel_winners_flt)
?
View(nobel_winners_flt)
nobel_winners|> rep_sample_n(size = 25,
reps = 50) |>
summarize()
nobel_winners|> rep_sample_n(size = 25,
reps = 50) |>
group_by(replicate) |>
summarize()
